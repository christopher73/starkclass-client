{"ast":null,"code":"var _jsxFileName = \"/home/chris/repos/StarkClass_Server/client/src/components/Ciclos/TimeCounter.js\";\nimport React from \"react\";\nimport Countdown from \"react-countdown\";\nexport default function TimeCounter({\n  hr\n}) {\n  console.log(Date.now());\n\n  const Completionist = () => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 31\n    }\n  }, \"BOo0o0o0M!!!!!\");\n\n  const renderer = ({\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a complete state\n      return /*#__PURE__*/React.createElement(Completionist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 14\n        }\n      });\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }\n      }, hours, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"orange\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, \" : \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, \" \", minutes, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"orange\",\n          borderStyle: \"solid\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, \" : \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }, \" \", seconds));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Countdown, {\n    date: Date.now() + hr * 3600000,\n    renderer: renderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/home/chris/repos/StarkClass_Server/client/src/components/Ciclos/TimeCounter.js"],"names":["React","Countdown","TimeCounter","hr","console","log","Date","now","Completionist","renderer","hours","minutes","seconds","completed","color","borderStyle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAA6B;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,GAAL,EAAZ;;AACA,QAAMC,aAAa,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA5B;;AAEA,QAAMC,QAAQ,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,GAAD,KAA4C;AAC3D,QAAIA,SAAJ,EAAe;AACb;AACA,0BAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAHD,MAGO;AACL;AACA,0BACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOH,KAAP,MADF,eAEE;AAAM,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQH,OAAR,MAHF,eAIE;AAAM,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,WAAW,EAAE;AAAhC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQH,OAAR,CALF,CADF;AASD;AACF,GAhBD;;AAiBA,sBAAO,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEN,IAAI,CAACC,GAAL,KAAaJ,EAAE,GAAG,OAAnC;AAA4C,IAAA,QAAQ,EAAEM,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React from \"react\";\nimport Countdown from \"react-countdown\";\nexport default function TimeCounter({ hr }) {\n  console.log(Date.now());\n  const Completionist = () => <span>BOo0o0o0M!!!!!</span>;\n\n  const renderer = ({ hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a complete state\n      return <Completionist />;\n    } else {\n      // Render a countdown\n      return (\n        <>\n          <span>{hours} </span>\n          <span style={{ color: \"orange\" }}> : </span>\n          <span> {minutes} </span>\n          <span style={{ color: \"orange\", borderStyle: \"solid\" }}> : </span>\n          <span> {seconds}</span>\n        </>\n      );\n    }\n  };\n  return <Countdown date={Date.now() + hr * 3600000} renderer={renderer} />;\n}\n"]},"metadata":{},"sourceType":"module"}