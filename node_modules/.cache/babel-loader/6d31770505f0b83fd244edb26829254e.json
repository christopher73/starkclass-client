{"ast":null,"code":"import ActionTypes from \"../constants/ActionTypes\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nexport const registerAuth = (token, history) => dispatch => {\n  console.log(\"im here \");\n  console.log(token);\n  localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n  setAuthToken(token); // Decode token to get user data\n\n  const decoded = jwt_decode(token); // Set current user\n\n  dispatch(setCurrentUser(decoded)); // history.push(\"/dashboard\");\n\n  history.push(\"/perfil\");\n}; // Set logged in user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: ActionTypes.SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Log user out\n\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({}));\n}; //OLD CODE\n// import axios from \"axios\";\n// import { conditionalExpression } from \"@babel/types\";\n// axios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\n// axios.defaults.headers.get[\"Access-Control-Allow-Origin\"] = \"*\";\n//register user\n// export const registerEmail = (userData, history) => dispatch => {\n//   axios\n//     .post(`${process.env.REACT_APP_API_URL}/api/users/email/register`, userData)\n//     .then(res => history.push(\"/login\")) //will change in future\n//     .catch(err => {\n//       //console.log(err);\n//       dispatch({\n//         type: ActionTypes.GET_ERRORS,\n//         payload: err.response.data\n//       });\n//     });\n// };\n// //login user\n// export const loginEmail = (userData, history) => dispatch => {\n//   axios\n//     .post(`${process.env.REACT_APP_API_URL}/api/users/email/login`, userData)\n//     .then(res => {\n//       // Save to localStorage\n//       // Set token to localStorage\n//       const { token } = res.data;\n//       localStorage.setItem(\"jwtToken\", token);\n//       // Set token to Auth header\n//       setAuthToken(token);\n//       // Decode token to get user data\n//       const decoded = jwt_decode(token);\n//       // Set current user\n//       history.push(\"/dashboard\");\n//       dispatch(setCurrentUser(decoded));\n//     })\n//     .catch(err => {\n//       console.log(err.response.data);\n//       // history.push(\"/login\");\n//       dispatch({\n//         type: ActionTypes.GET_ERRORS,\n//         payload: err.response.data\n//       });\n//     });\n// };\n// export const registerFacebook = (response, history) => dispatch => {\n//   //console.log(response);\n//   const userData = {\n//     accessToken: response.accessToken,\n//     userID: response.userID,\n//     name: response.name,\n//     email: response.email,\n//     imageUrl: response.picture.data.url\n//   };\n//   axios\n//     .post(`${process.env.REACT_APP_API_URL}/api/users/auth/facebook`)\n//     .then(res => {\n//       console.log(res);\n//       // Save to localStorage\n//       // Set token to localStorage\n//       //console.log(res.data);\n//       const { token } = res.data;\n//       localStorage.setItem(\"jwtToken\", token);\n//       // Set token to Auth header\n//       setAuthToken(token);\n//       // Decode token to get user data\n//       const decoded = jwt_decode(token);\n//       // Set current user\n//       dispatch(setCurrentUser(decoded));\n//       // history.push(\"/dashboard\");\n//     })\n//     .catch(err => {\n//       //console.log(err);\n//     }); //will change in future\n// };","map":{"version":3,"sources":["/home/chris/repos/StarkClass_Server/client/src/actions/actions.js"],"names":["ActionTypes","jwt_decode","setAuthToken","registerAuth","token","history","dispatch","console","log","localStorage","setItem","decoded","setCurrentUser","push","type","SET_CURRENT_USER","payload","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoBC,QAAQ,IAAI;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAK,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCN,KAAjC,EAJ0D,CAK1D;;AACAF,EAAAA,YAAY,CAACE,KAAD,CAAZ,CAN0D,CAO1D;;AACA,QAAMO,OAAO,GAAGV,UAAU,CAACG,KAAD,CAA1B,CAR0D,CAS1D;;AACAE,EAAAA,QAAQ,CAACM,cAAc,CAACD,OAAD,CAAf,CAAR,CAV0D,CAW1D;;AACAN,EAAAA,OAAO,CAACQ,IAAR,CAAa,SAAb;AACD,CAbM,C,CAcP;;AACA,OAAO,MAAMD,cAAc,GAAGD,OAAO,IAAI;AACvC,SAAO;AACLG,IAAAA,IAAI,EAAEd,WAAW,CAACe,gBADb;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM,C,CAMP;;AACA,OAAO,MAAMM,UAAU,GAAG,MAAMX,QAAQ,IAAI;AAC1C;AACAG,EAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB,EAF0C,CAG1C;;AACAhB,EAAAA,YAAY,CAAC,KAAD,CAAZ,CAJ0C,CAK1C;;AACAI,EAAAA,QAAQ,CAACM,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,CAPM,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ActionTypes from \"../constants/ActionTypes\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\nexport const registerAuth = (token, history) => dispatch => {\n  console.log(\"im here \");\n  console.log(token);\n\n  localStorage.setItem(\"jwtToken\", token);\n  // Set token to Auth header\n  setAuthToken(token);\n  // Decode token to get user data\n  const decoded = jwt_decode(token);\n  // Set current user\n  dispatch(setCurrentUser(decoded));\n  // history.push(\"/dashboard\");\n  history.push(\"/perfil\");\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: ActionTypes.SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n\n//OLD CODE\n// import axios from \"axios\";\n// import { conditionalExpression } from \"@babel/types\";\n// axios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\n// axios.defaults.headers.get[\"Access-Control-Allow-Origin\"] = \"*\";\n//register user\n// export const registerEmail = (userData, history) => dispatch => {\n//   axios\n//     .post(`${process.env.REACT_APP_API_URL}/api/users/email/register`, userData)\n//     .then(res => history.push(\"/login\")) //will change in future\n//     .catch(err => {\n//       //console.log(err);\n//       dispatch({\n//         type: ActionTypes.GET_ERRORS,\n//         payload: err.response.data\n//       });\n//     });\n// };\n// //login user\n// export const loginEmail = (userData, history) => dispatch => {\n//   axios\n//     .post(`${process.env.REACT_APP_API_URL}/api/users/email/login`, userData)\n//     .then(res => {\n//       // Save to localStorage\n\n//       // Set token to localStorage\n//       const { token } = res.data;\n//       localStorage.setItem(\"jwtToken\", token);\n//       // Set token to Auth header\n//       setAuthToken(token);\n//       // Decode token to get user data\n//       const decoded = jwt_decode(token);\n//       // Set current user\n//       history.push(\"/dashboard\");\n\n//       dispatch(setCurrentUser(decoded));\n//     })\n//     .catch(err => {\n//       console.log(err.response.data);\n//       // history.push(\"/login\");\n//       dispatch({\n//         type: ActionTypes.GET_ERRORS,\n//         payload: err.response.data\n//       });\n//     });\n// };\n// export const registerFacebook = (response, history) => dispatch => {\n//   //console.log(response);\n//   const userData = {\n//     accessToken: response.accessToken,\n//     userID: response.userID,\n//     name: response.name,\n//     email: response.email,\n//     imageUrl: response.picture.data.url\n//   };\n//   axios\n//     .post(`${process.env.REACT_APP_API_URL}/api/users/auth/facebook`)\n//     .then(res => {\n//       console.log(res);\n//       // Save to localStorage\n//       // Set token to localStorage\n//       //console.log(res.data);\n//       const { token } = res.data;\n//       localStorage.setItem(\"jwtToken\", token);\n//       // Set token to Auth header\n//       setAuthToken(token);\n//       // Decode token to get user data\n//       const decoded = jwt_decode(token);\n//       // Set current user\n//       dispatch(setCurrentUser(decoded));\n//       // history.push(\"/dashboard\");\n//     })\n//     .catch(err => {\n//       //console.log(err);\n//     }); //will change in future\n// };\n"]},"metadata":{},"sourceType":"module"}