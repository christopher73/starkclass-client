{"ast":null,"code":"var _jsxFileName = \"/home/chris/repos/StarkClass_Server/client/src/components/Ciclos/TimeCounter.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Countdown from \"react-countdown\";\nexport default function TimeCounter({\n  hr,\n  message\n}) {\n  const [dateStart, setDateStart] = useState(localStorage.getItem(\"countdownTime\") || Date.now());\n  useEffect(() => {\n    console.log(dateStart);\n    localStorage.setItem(\"countdownTime\", dateStart);\n  }, [dateStart]); // console.log(\"date => \" + Date.now());\n\n  const Completionist = () => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 31\n    }\n  }, message);\n\n  const renderer = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a complete state\n      return /*#__PURE__*/React.createElement(Completionist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }\n      });\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxWidth: \"80%\",\n          margin: \"0\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-evenly\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginTop: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"black\",\n          padding: \"5px\",\n          borderColor: \"#FF4900\",\n          borderStyle: \"solid\",\n          borderRadius: \".5rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, days), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#FF4900\",\n          fontSize: \"3rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, \" Days \")), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginTop: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"black\",\n          padding: \"5px\",\n          borderColor: \"#FF4900\",\n          borderStyle: \"solid\",\n          borderRadius: \".5rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, hours), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#FF4900\",\n          fontSize: \"3rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, \" Hr \")), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginTop: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"black\",\n          padding: \"5px\",\n          borderColor: \"#FF4900\",\n          borderStyle: \"solid\",\n          borderRadius: \".5rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, minutes), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#FF4900\",\n          fontSize: \"3rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, \" min \")), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginTop: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"black\",\n          padding: \"5px\",\n          borderColor: \"#FF4900\",\n          borderStyle: \"solid\",\n          borderRadius: \".5rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, seconds), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#FF4900\",\n          fontSize: \"3rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, \" seg \")));\n    }\n  }; // console.log(dateStart);\n\n\n  return /*#__PURE__*/React.createElement(Countdown, {\n    date: parseInt(dateStart) + hr * 3600000,\n    renderer: renderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/chris/repos/StarkClass_Server/client/src/components/Ciclos/TimeCounter.js"],"names":["React","useState","useEffect","Countdown","TimeCounter","hr","message","dateStart","setDateStart","localStorage","getItem","Date","now","console","log","setItem","Completionist","renderer","days","hours","minutes","seconds","completed","maxWidth","margin","display","flexWrap","justifyContent","marginTop","color","padding","borderColor","borderStyle","borderRadius","fontSize","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Countdown from \"react-countdown\";\nexport default function TimeCounter({ hr, message }) {\n  const [dateStart, setDateStart] = useState(\n    localStorage.getItem(\"countdownTime\") || Date.now()\n  );\n  useEffect(() => {\n    console.log(dateStart);\n    localStorage.setItem(\"countdownTime\", dateStart);\n  }, [dateStart]);\n  // console.log(\"date => \" + Date.now());\n  const Completionist = () => <span>{message}</span>;\n\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a complete state\n      return <Completionist />;\n    } else {\n      // Render a countdown\n      return (\n        <div\n          style={{\n            maxWidth: \"80%\",\n            margin: \"0\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-evenly\",\n          }}\n        >\n          <span style={{ marginTop: \"30px\" }}>\n            <span\n              style={{\n                color: \"black\",\n                padding: \"5px\",\n                borderColor: \"#FF4900\",\n                borderStyle: \"solid\",\n                borderRadius: \".5rem\",\n              }}\n            >\n              {days}\n            </span>\n            <span style={{ color: \"#FF4900\", fontSize: \"3rem\" }}> Days </span>\n          </span>\n          <span style={{ marginTop: \"30px\" }}>\n            <span\n              style={{\n                color: \"black\",\n                padding: \"5px\",\n                borderColor: \"#FF4900\",\n                borderStyle: \"solid\",\n                borderRadius: \".5rem\",\n              }}\n            >\n              {hours}\n            </span>\n            <span style={{ color: \"#FF4900\", fontSize: \"3rem\" }}> Hr </span>\n          </span>\n          <span style={{ marginTop: \"30px\" }}>\n            {\" \"}\n            <span\n              style={{\n                color: \"black\",\n                padding: \"5px\",\n                borderColor: \"#FF4900\",\n                borderStyle: \"solid\",\n                borderRadius: \".5rem\",\n              }}\n            >\n              {minutes}\n            </span>\n            <span style={{ color: \"#FF4900\", fontSize: \"3rem\" }}> min </span>\n          </span>\n          <span style={{ marginTop: \"30px\" }}>\n            {\" \"}\n            <span\n              style={{\n                color: \"black\",\n                padding: \"5px\",\n\n                borderColor: \"#FF4900\",\n                borderStyle: \"solid\",\n                borderRadius: \".5rem\",\n              }}\n            >\n              {seconds}\n            </span>\n            <span style={{ color: \"#FF4900\", fontSize: \"3rem\" }}> seg </span>\n          </span>\n        </div>\n      );\n    }\n  };\n\n  // console.log(dateStart);\n  return (\n    <Countdown date={parseInt(dateStart) + hr * 3600000} renderer={renderer} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}