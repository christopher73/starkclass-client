{"ast":null,"code":"import ActionTypes from \"../constants/ActionTypes\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nexport const registerAuth = (token, history) => dispatch => {\n  console.log(\"im here \");\n  console.log(token);\n  localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n  setAuthToken(token); // Decode token to get user data\n\n  const decoded = jwt_decode(token); // Set current user\n\n  dispatch(setCurrentUser(decoded)); // history.push(\"/dashboard\");\n\n  history.push(\"/dashboard\");\n}; // Set logged in user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: ActionTypes.SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Log user out\n\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/home/chris/repos/StarkClass_Server/client/src/actions/actions.js"],"names":["ActionTypes","jwt_decode","setAuthToken","registerAuth","token","history","dispatch","console","log","localStorage","setItem","decoded","setCurrentUser","push","type","SET_CURRENT_USER","payload","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAqBC,QAAD,IAAc;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAK,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCN,KAAjC,EAJ4D,CAK5D;;AACAF,EAAAA,YAAY,CAACE,KAAD,CAAZ,CAN4D,CAO5D;;AACA,QAAMO,OAAO,GAAGV,UAAU,CAACG,KAAD,CAA1B,CAR4D,CAS5D;;AACAE,EAAAA,QAAQ,CAACM,cAAc,CAACD,OAAD,CAAf,CAAR,CAV4D,CAW5D;;AACAN,EAAAA,OAAO,CAACQ,IAAR,CAAa,YAAb;AACD,CAbM,C,CAcP;;AACA,OAAO,MAAMD,cAAc,GAAID,OAAD,IAAa;AACzC,SAAO;AACLG,IAAAA,IAAI,EAAEd,WAAW,CAACe,gBADb;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM,C,CAMP;;AACA,OAAO,MAAMM,UAAU,GAAG,MAAOX,QAAD,IAAc;AAC5C;AACAG,EAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB,EAF4C,CAG5C;;AACAhB,EAAAA,YAAY,CAAC,KAAD,CAAZ,CAJ4C,CAK5C;;AACAI,EAAAA,QAAQ,CAACM,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,CAPM","sourcesContent":["import ActionTypes from \"../constants/ActionTypes\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\nexport const registerAuth = (token, history) => (dispatch) => {\n  console.log(\"im here \");\n  console.log(token);\n\n  localStorage.setItem(\"jwtToken\", token);\n  // Set token to Auth header\n  setAuthToken(token);\n  // Decode token to get user data\n  const decoded = jwt_decode(token);\n  // Set current user\n  dispatch(setCurrentUser(decoded));\n  // history.push(\"/dashboard\");\n  history.push(\"/dashboard\");\n};\n// Set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: ActionTypes.SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n"]},"metadata":{},"sourceType":"module"}