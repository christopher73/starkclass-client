'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var CulqiContext = react.createContext({});
var Culqi = CulqiContext.Consumer;

var culqiMessages = {
  welcome: 'checkout_bienvenido',
  closed: 'checkout_cerrado'
};
var baseCulqiUrl = 'https://checkout.culqi.com';
var culqiId = 'culqi-js';
var culqiUrl = baseCulqiUrl + "/js/v3";

var CulqiCheckout =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(CulqiCheckout, _Component);

  function CulqiCheckout() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _this.state = {
      amount: _this.props.amount || 0
    };

    _this.getCulqiSettings = function () {
      var amount = _this.state.amount;
      var _this$props = _this.props,
          _this$props$currency = _this$props.currency,
          currency = _this$props$currency === void 0 ? 'PEN' : _this$props$currency,
          _this$props$descripti = _this$props.description,
          description = _this$props$descripti === void 0 ? '' : _this$props$descripti,
          _this$props$title = _this$props.title,
          title = _this$props$title === void 0 ? '' : _this$props$title;
      return {
        amount: amount,
        currency: currency,
        description: description,
        title: title
      };
    };

    _this.initCulqi = function () {
      var _this$props2 = _this.props,
          publicKey = _this$props2.publicKey,
          _this$props2$options = _this$props2.options,
          options = _this$props2$options === void 0 ? {} : _this$props2$options;

      var culqiSettings = _this.getCulqiSettings();

      _this.setCulqiOptions(options);

      window.Culqi.publicKey = publicKey;
      requestAnimationFrame(function () {
        _this.setCulqiSettings(culqiSettings);
      }); // Patch it so it doesn't throw on browser

      window.culqi = function () {};
    };

    _this.onCulqiLoad = function (e) {
      if (window.Culqi) {
        _this.initCulqi();
      }
    };

    _this.onCulqiEvent = function (messageEvent) {
      var origin = messageEvent.origin,
          data = messageEvent.data;
      var _this$props3 = _this.props,
          onClose = _this$props3.onClose,
          onError = _this$props3.onError,
          onToken = _this$props3.onToken;
      if (origin !== baseCulqiUrl) return;

      if (typeof data === 'string' && data === culqiMessages.closed) {
        onClose && onClose();

        _this.initCulqi();
      }

      if (typeof data === 'object') {
        var object = data.object;
        if (!object) return;

        if (object === 'token') {
          _this.setState({
            token: data
          }, function () {
            onToken && onToken(data);
          });
        } else if (object === 'error') {
          _this.setState({
            error: data
          }, function () {
            onError && onError(data);
          });
        }
      }
    };

    _this.openCulqi = function () {
      if (window.Culqi) {
        window.Culqi.open();
      }
    };

    _this.setCulqiOptions = function (userOptions) {
      if (Object.keys(userOptions).length > 0 && window.Culqi) {
        window.Culqi.options(userOptions);
      }
    };

    _this.setCulqiSettings = function (settings) {
      if (window.Culqi) {
        window.Culqi.settings(settings);
      }
    };

    _this.setAmount = function (amount) {
      _this.setState({
        amount: amount || 0
      });
    };

    return _this;
  }

  var _proto = CulqiCheckout.prototype;

  _proto.componentDidMount = function componentDidMount() {
    if (!this.props.publicKey) return;
    var script = document.createElement('script');
    script.id = culqiId;
    script.src = culqiUrl;
    script.async = true;
    script.onload = this.onCulqiLoad;
    this.culqiScript = script;
    document.body.appendChild(this.culqiScript);
    window.addEventListener('message', this.onCulqiEvent, false);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    if (prevState.amount !== this.state.amount) {
      this.setCulqiSettings(this.getCulqiSettings());
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.culqiScript) {
      this.culqiScript.parentNode.removeChild(this.culqiScript);
    }

    window.removeEventListener('message', this.onCulqiEvent, false);
    window.culqi = undefined;
  };

  _proto.render = function render() {
    if (!this.props.publicKey) {
      throw new Error('Please pass along a `publicKey` prop.');
    }

    return react.createElement(CulqiContext.Provider, {
      children: this.props.children,
      value: {
        openCulqi: this.openCulqi,
        setAmount: this.setAmount,
        amount: this.state.amount,
        token: this.state.token,
        error: this.state.error
      }
    });
  };

  return CulqiCheckout;
}(react.Component);

exports.CulqiProvider = CulqiCheckout;
exports.Culqi = Culqi;
